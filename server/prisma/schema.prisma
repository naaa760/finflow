generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  clerkId       String        @unique
  email         String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  transactions  Transaction[]
  budgets       Budget[]
  investments   Investment[]
  recurringTransactions RecurringTransaction[]
  financialGoals FinancialGoal[]
}

model Transaction {
  id          String    @id @default(cuid())
  userId      String
  amount      Float
  category    String
  description String
  date        DateTime
  type        String    // "income" or "expense"
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
}

model Budget {
  id          String    @id @default(cuid())
  userId      String
  category    String
  amount      Float
  spent       Float     @default(0)
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
}

model Investment {
  id           String    @id @default(cuid())
  userId       String
  type         String    // stocks, bonds, crypto, etc.
  amount       Float
  name         String
  purchaseDate DateTime
  currentValue Float
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  user         User      @relation(fields: [userId], references: [id])
}

model RecurringTransaction {
  id          String    @id @default(cuid())
  userId      String
  amount      Float
  category    String
  description String
  type        String    // "income" or "expense"
  frequency   String    // "daily", "weekly", "monthly", "yearly"
  startDate   DateTime
  endDate     DateTime?
  lastProcessed DateTime
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
}

model FinancialGoal {
  id          String    @id @default(cuid())
  userId      String
  name        String
  targetAmount Float
  currentAmount Float   @default(0)
  deadline    DateTime?
  category    String    // savings, investment, debt, etc.
  status      String    @default("in_progress") // in_progress, completed, failed
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
}
